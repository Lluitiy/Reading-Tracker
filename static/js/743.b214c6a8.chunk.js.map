{"version":3,"file":"static/js/743.b214c6a8.chunk.js","mappings":"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","sources":["components/Timer/CountdownTimer/DateTimeDisplay/DateTimeDisplay.styled.jsx","components/Timer/CountdownTimer/DateTimeDisplay/DateTimeDisplay.js","Hooks/useCountdown.js","components/Timer/CountdownTimer/CountdownTimer.styled.jsx","components/Timer/CountdownTimer/CountdownTimer.js","components/Timer/Timer.styled.jsx","components/Timer/Timer.jsx","Pages/StatisticsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Numbers = styled.p`\n\tfont-weight: 700;\n\tfont-size: 25px;\n\tline-height: 38px;\n\tcolor: ${p => p.theme.colors.textMain};\n`;\n\nexport const Date = styled.span`\n\tfont-weight: 500;\n\tfont-size: 10px;\n\tline-height: 12px;\n\ttext-align: center;\n\tcolor: ${p => p.theme.colors.textSecondary};\n`;\n","import React from 'react';\nimport { Numbers, Date } from './DateTimeDisplay.styled';\n\nconst DateTimeDisplay = ({ value, type }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Numbers>{value}</Numbers>\n\t\t\t<Date>{type}</Date>\n\t\t</div>\n\t);\n};\n\nexport default DateTimeDisplay;\n","import { useEffect, useState } from 'react';\n\nconst useCountdown = targetDate => {\n\tconst countDownDate = new Date(targetDate).getTime();\n\n\tconst [countDown, setCountDown] = useState(\n\t\tcountDownDate - new Date().getTime()\n\t);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetCountDown(countDownDate - new Date().getTime());\n\t\t}, 1000);\n\t\treturn () => clearInterval(interval);\n\t}, [countDownDate]);\n\treturn getReturnValues(countDown);\n};\n\nconst getReturnValues = countDown => {\n\tconst days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n\tconst hours = Math.floor(\n\t\t(countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n\t);\n\tconst minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\n\tconst seconds = Math.floor((countDown % (1000 * 60)) / 1000);\n\n\treturn [days, hours, minutes, seconds];\n};\n\nexport { useCountdown };\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\ttext-align: center;\n\tmargin: 12px 0px;\n`;\n\nexport const Title = styled.p`\n\tfont-weight: 500;\n\tfont-size: 14px;\n\tline-height: 17px;\n\tmargin-bottom: 9px;\n\tcolor: ${p => p.theme.colors.textSecondary};\n`;\n\nexport const Dots = styled.p`\n\tfont-weight: 700;\n\tfont-size: 25px;\n\tline-height: 38px;\n\tcolor: ${p => p.theme.colors.textMain};\n`;\n\nexport const Counter = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: baseline;\n\n\tpadding: 8px 33px;\n\tmin-width: 280px;\n\tbackground-color: ${p => p.theme.colors.white};\n\tbox-shadow: ${p => p.theme.shadow.box};\n\t@media screen and (min-width: 768px) {\n\t\tpadding: 8px 30px;\n\t}\n\n\t@media screen and (min-width: 1280px) {\n\t\tpadding: 8px 45px;\n\t}\n`;\n","import React from 'react';\nimport DateTimeDisplay from './DateTimeDisplay/DateTimeDisplay';\nimport { useCountdown } from 'Hooks/useCountdown';\nimport useTranslation from 'Hooks/useTranslations';\n\nimport { Wrap, Counter, Title, Dots } from './CountdownTimer.styled.jsx';\n\nconst CountdownTimer = ({ targetDate, title }) => {\n\tconst translation = useTranslation();\n\tconst [days, hours, minutes, seconds] = useCountdown(targetDate);\n\n\tif (days + hours + minutes + seconds <= 0) {\n\t\treturn <p>TIME IS GONE</p>;\n\t} else {\n\t\treturn (\n\t\t\t<Wrap>\n\t\t\t\t<Title>{title}</Title>\n\t\t\t\t<Counter>\n\t\t\t\t\t<DateTimeDisplay\n\t\t\t\t\t\tvalue={days}\n\t\t\t\t\t\ttype={translation.timer.days}\n\t\t\t\t\t\tisDanger={days <= 3}\n\t\t\t\t\t/>\n\t\t\t\t\t<Dots>:</Dots>\n\t\t\t\t\t<DateTimeDisplay\n\t\t\t\t\t\tvalue={hours}\n\t\t\t\t\t\ttype={translation.timer.hours}\n\t\t\t\t\t\tisDanger={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<Dots>:</Dots>\n\t\t\t\t\t<DateTimeDisplay\n\t\t\t\t\t\tvalue={minutes}\n\t\t\t\t\t\ttype={translation.timer.min}\n\t\t\t\t\t\tisDanger={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<Dots>:</Dots>\n\t\t\t\t\t<DateTimeDisplay\n\t\t\t\t\t\tvalue={seconds}\n\t\t\t\t\t\ttype={translation.timer.sec}\n\t\t\t\t\t\tisDanger={false}\n\t\t\t\t\t/>\n\t\t\t\t</Counter>\n\t\t\t</Wrap>\n\t\t);\n\t}\n};\n\nexport default CountdownTimer;\n\n// import React from 'react';\n// import CountdownTimer from './CountdownTimer';\n\n// import './App.css';\n\n// export default function App() {\n//   const THREE_DAYS_IN_MS = 3 * 24 * 60 * 60 * 1000;\n//   const NOW_IN_MS = new Date().getTime();\n\n//   const dateTimeAfterThreeDays = NOW_IN_MS + THREE_DAYS_IN_MS;\n\n//   return (\n//     <div>\n//       <h1>Countdown Timer</h1>\n//       <CountdownTimer targetDate={dateTimeAfterThreeDays} />\n//     </div>\n//   );\n// }\n","import styled from '@emotion/styled';\n\nexport const TimerContainer = styled.div`\n\tbox-sizing: border-box;\n\tmargin: 0px auto;\n\n\t@media screen and (min-width: 768px) {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\tmax-width: 800px;\n\t}\n\t@media screen and (min-width: 1280px) {\n\t\tmax-width: 900px;\n\t}\n`;\n","import CountdownTimer from '../Timer/CountdownTimer/CountdownTimer';\n// import { useSelector } from 'react-redux';\n// import { Wrap } from './Timer.styled.jsx';\n// import { Section } from 'components/Common/Common.styled';\nimport { TimerContainer } from './Timer.styled';\nimport useTranslation from 'Hooks/useTranslations';\n\nconst backend = {\n\tstartDate: '2020-12-31',\n\tendDate: '2022-11-05',\n};\n\nconst Timer = () => {\n\tconst translation = useTranslation();\n\tconst GET_EN_YEAR = new Date().getFullYear() + '-12-31';\n\tconst END_YEAR_MS = new Date(GET_EN_YEAR).getTime();\n\t// const endDate = useSelector(state => state.planning.endDate);\n\t// const END_TRAINING_MS = new Date(endDate).getTime();\n\tconst END_TRAINING_MS = new Date(backend.endDate).getTime();\n\n\treturn (\n\t\t<TimerContainer>\n\t\t\t<CountdownTimer\n\t\t\t\ttitle={translation.timer.title1}\n\t\t\t\ttargetDate={END_YEAR_MS}\n\t\t\t></CountdownTimer>\n\t\t\t<CountdownTimer\n\t\t\t\ttitle={translation.timer.title2}\n\t\t\t\ttargetDate={END_TRAINING_MS}\n\t\t\t></CountdownTimer>\n\t\t</TimerContainer>\n\t);\n};\n\nexport default Timer;\n\n// !______ Для тестів________\n\n// import Timer from 'components/Timer/Timer';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useEffect } from 'react';\n// import { getcurrentPlanning } from 'Redux/Planning/planningOperations';\n\n// const HomePage = () => {\n// \tconst dispatch = useDispatch();\n\n// \t// useEffect(() => {\n// \t// \tdispatch(getcurrentPlanning());\n\n// \t// \t// eslint-disable-next-line\n// \t// }, []);\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<Timer />\n// \t\t</div>\n// \t);\n// };\n\n// export default HomePage;\n\n// !___________Mail for tests____________\n\n// simpson@mail.ua\n// Simpson123123\n","import Timer from 'components/Timer/Timer';\nimport TrainingBookList from 'components/TrainingBookList/TrainingBookList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCurrentPlanning } from 'Redux/Planning/planningOperations';\nimport Results from '../components/Results/Results';\n\nconst StatisticsPage = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(getCurrentPlanning());\n\t}, [dispatch]);\n\treturn (\n\t\t<div>\n\t\t\t<Timer />\n\t\t\t<TrainingBookList />\n\t\t\t<Results />\n\t\t</div>\n\t);\n};\n\nexport default StatisticsPage;\n"],"names":["Numbers","styled","p","theme","colors","textMain","Date","textSecondary","value","type","getReturnValues","countDown","Math","floor","Wrap","Title","Dots","Counter","white","shadow","box","targetDate","title","translation","useTranslation","countDownDate","getTime","useState","setCountDown","useEffect","interval","setInterval","clearInterval","useCountdown","days","hours","minutes","seconds","timer","isDanger","min","sec","TimerContainer","backend","GET_EN_YEAR","getFullYear","END_YEAR_MS","END_TRAINING_MS","title1","title2","dispatch","useDispatch","getCurrentPlanning","TrainingBookList","Results"],"sourceRoot":""}